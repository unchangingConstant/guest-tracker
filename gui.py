# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'designerTest.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5 import QtCore, QtGui, QtWidgets
from dbManager import *
import customWidgets as custom

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):

        #All interactions with the Student database will be managed with this tool
        #dbRef short for "Database Reference"
        self._dbRef = Database()

        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(899, 541)

        self.initLayOut()
        self.initSearchBox()
        self.initVisitButton()
        self.initStudentView()

        #Everything in this box was made in QtDesigner, I'm not sure what most of it does yet
        #----------------------------------------------------------

        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 899, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        #-----------------------------------------------------------

    #Sets up gui layout
    #I don't know what half of it does, I will write better comments once I do
    def initLayOut(self):
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        #Creates layout for searchBar
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.verticalLayout.setAlignment(QtCore.Qt.AlignTop)

        self.searchBarLayout = QtWidgets.QHBoxLayout()
        self.verticalLayout.addLayout(self.searchBarLayout)

    #Creates search box
    def initSearchBox(self):
        self.searchBox = custom.SearchBox()
        #Adds students from database into search box
        self.searchBox.addItems(self._dbRef.fetchStudentStrings())
        self.searchBarLayout.addWidget(self.searchBox)
    
    #Allows user to add visit to database (WIP)
    def initVisitButton(self):
        self.visitButton = QtWidgets.QPushButton("Start Visit")
        self.searchBarLayout.addWidget(self.visitButton)
        self.visitButton.clicked.connect(self.createVisit)
    
    def initStudentView(self):
        self.studentView = custom.ButtonList()
        self.verticalLayout.addWidget(self.studentView)
        self.updateStudentView()

    #Function to execute on click of visitButton
    def createVisit(self):
        studentID = self.searchBox.text().split(":")[0]
        self._dbRef.startVisit(studentID)
        self.updateStudentView()

    def updateStudentView(self):
        self.studentView.clearList()

        ongoingVisits = self._dbRef.getOngoingVisits()
        for visit in ongoingVisits:
            name = f"{self._dbRef.getStudentName(visit[0])}: {visit[0]}"
            self.studentView.addItem(name, "End Visit")

    #Button that adds and deletes a student from the database 
    #Made to test if searchbar updates with database upon certain signals
    '''
    def initTestButton(self):
        self.button = QtWidgets.QPushButton()
        self.button.setCheckable(True)
        self.button.clicked.connect(self._dbRef.toggleDaddy)
        self.verticalLayout.addWidget(self.button)
    '''
    
    #Method created by QtDesigner, not sure what it does yet
    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))

#Runs application
if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())